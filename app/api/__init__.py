from flask import Blueprint
"""REST相关API，应用中自成一体的子集
    Roy Fielding 定义：
        客户端-服务端，   客户端和服务端有明确的界限
        无状态，         服务端不保存客户端任何状态
        缓存，           服务器的响应可以标记为缓存或不可缓存，客户端或中间件可以使用缓存
        接口统一         客户端访问服务器时使用的协议必须一致，定义良好，标准化，
                        涉及包括：资源标识符，资源表述，客户端，服务器描述信息，超媒体
        系统分层         客户端和服务端之间按需插入代理服务器，缓存或网关，以提高性能，稳定性和伸缩性
        按需编程         客户端可以选择从服务器下载代码，在客户端上下文执行
每个资源都要使用唯一的URL 标识，
    URL/api/posts/123, 123就是博客文章的唯一标识符，使用文章在数据库的主键表示
    某一类资源集合也要一个URL，如博客集合URL  /apis/posts, 评论集合 /apis/comments
    还可以为某一类资源子集定义集合URL如
        /apis/posts/123/comments/
    末端带斜线的路由，如果客户端URL没有斜线，而唯一匹配的路由带斜线，flask会返回一个重定向，转向末端有斜线的url，
    反之 客户端URL 有斜线，匹配路由没有斜线，则flask不会重定向
导入蓝本所有模块，这样才能注册路由和错误处理程序
有很多模块要导入api包，所以从相关模块底部导入，依附循环依赖出错
"""
api = Blueprint('api', __name__)

from . import authentication, posts, users, comments, errors
